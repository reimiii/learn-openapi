openapi: 3.0.3
info:
  title: 'Todo List RESTFul API'
  description: "OPEN API for TODO LIST"
  version: 1.0.0
  termsOfService: 'https://github.com/reimiii'
  contact:
    name: 'Hilmi Akbar Muharrom'
    email: 'hilmiakbarmuharrom@gmail.com'
    url: 'https://github.com/reimiii'
  license:
    name: 'MIT'
    url: 'https://opensource.org/license/mit'
servers:
  - url: 'https://{env}.me.com/api/v1'
    description: 'todo list server...'
    variables:
      env:
        description: 'server env'
        default: 'dev'
        enum:
          - 'dev'
          - 'qa'
          - 'prod'
externalDocs:
  url: 'https://github.com/reimiii'
  description: 'SOCIAL MEDIA'
paths:

  /todolist:
    get:
      summary: 'get all todolist'
      description: 'get all active todo by default'
      parameters:
        - in: query
          required: false
          name: 'include_done'
          description: 'include done todo..'
          schema:
            type: boolean
            nullable: true
            default: false

        - in: query
          required: false
          name: 'name'
          description: 'filter todo.. by name'
          schema:
            type: string
            nullable: true
            minLength: 1
            maxLength: 100
          examples:
            java:
              description: 'the java example'
              value: 'JAVA'
            kotlin:
              description: 'the kotlin example'
              value: 'KOTLIN'
      responses:

    post:
      summary: 'create todo'
      description: 'create single todolist'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  required: true
                priority:
                  type: integer
                  format: int32
                  required: true
                  default: 1
                tags:
                  type: array
                  required: false
                  minItems: 1
                  items:
                    type: "string"
                    minLength: 1
            examples:
              java:
                description: 'create example todo java'
                value:
                  name: 'Java'
                  priority: 2
                  tags:
                    - 'kotlin'
                    - 'java'
                    - 'programming'
              kotlin:
                description: 'create example todo kotlin'
                value:
                  name: 'Kotlin'
                  priority: 2
                  tags:
                    - 'kotlin'
                    - 'fun'
                    - 'java'
                    - 'programming'




      responses:

  /todolist/{todoListId}:
    put:
      summary: 'update todo'
      description: 'update single todolist'
      parameters:
        - in: path
          required: true
          name: 'todoListId'
          description: 'required for update'
          schema:
            type: string
            minLength: 1
            maxLength: 100
          examples:
            java:
              description: 'for id java'
              value: '1221'
            kotlin:
              description: 'for id kotlin'
              value: '0011'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  required: true
                priority:
                  type: integer
                  format: int32
                  default: 1
                  required: true
                tags:
                  type: array
                  required: false
                  minItems: 1
                  items:
                    type: "string"
                    minLength: 1
            examples:
              java:
                description: 'create example todo java'
                value:
                  name: 'Java'
                  priority: 2
                  tags:
                    - 'kotlin'
                    - 'java'
                    - 'programming'
              kotlin:
                description: 'create example todo kotlin'
                value:
                  name: 'Kotlin'
                  priority: 2
                  tags:
                    - 'kotlin'
                    - 'fun'
                    - 'java'
                    - 'programming'

      responses:

    delete:
      summary: 'delete todo'
      description: 'delete single todolist'
      parameters:
        - in: path
          required: true
          name: 'todoListId'
          description: 'required for delete'
          schema:
            type: string
            minLength: 1
            maxLength: 100

      requestBody:
        required: true
        content:
          application/json:
            schema:

      responses:
